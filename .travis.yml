language: python

python:
  - 3.5

addons:
  postgresql: "9.6"
  apt:
    packages:
      - postgresql-9.6-postgis-2.3

install:
  - pip install -r requirements.txt

env:
  # Github OAUTH token for creating pull requests
  secure: "Lgo72FTFsrLNAZF0Xxlcarzf/u24SFJekHBfMPYAEHS3LzX9G8V6+HqG5qO/3Q0IZ9goez3yiBGOij77gGafHoaRyqzKgH9izqgrieXoB0kT62kJTjf3AXb35GqVCz7jTU6Io7Ara9cHadAvIx4EyGD1pq/70UZdNagkj6p8KI4DWzrTJsQ2s6IfcI461gLvunSyI3EqlKFV6lGZWOa1rws9BldvPhWeJJY62KhNx/9vv/o1qBYD5QWYUaoaaMgxtKqwafj5bicWzXjVUHJKQ0Gm+MTjGlagJli5661l3h90IVn6nsgLLEie1aDLMfAwlGanK4g1CX7tRCbhg4hUenTzO/VSuYdseoEUF24jDUqSQK0snRpeJTLFe3s/GwbjXB7RlaHDL0pD6+oWhuME0m7ztSp8jCvxiF5fer+ilF1BsyLBkA+0tO/FzQscSvL87RDWBCM9k7c57cBQOxS2I6/sj65LyTsgFrNS0vMMnUtdYk/4ixKbeZSoFjLerdkXGojlvpcklwuzRawPnk2eHt1HTeu5zqJZ3bsrSqMlmDoABK77dDAoVaQIdvP/3dcnxb7j5GRbGmmYHS+dsOR5oLAwgal/L/ilqJzLe8ZdD1yCUfCXPw9SRVP3k7vLI3lXgzPfXXlky3qzsvLqYAhugbq7t11ZgxBCBTblElFFB/Y="

# Handle git submodules yourself
git:
  submodules: false
# Use sed to replace the SSH URL with the public URL, then initialize submodules
before_install:
  - ./scripts/setup_git.sh
  - git submodule update --init --recursive

before_script:
  - printf "[pg_qgep]\nhost=localhost\ndbname=qgep\nuser=postgres\n" > ~/.pg_service.conf
  - psql -c 'CREATE DATABASE qgep;' -U postgres
  - psql -c 'CREATE EXTENSION postgis;' -U postgres -d qgep
  - psql -c 'CREATE EXTENSION hstore;' -U postgres -d qgep

  # Append the 3 services used for pum's checks to pg_service.conf
  - printf "[qgep_prod]\nhost=localhost\ndbname=qgep_prod\nuser=postgres\n\n[qgep_test]\nhost=localhost\ndbname=qgep_test\nuser=postgres\n\n[qgep_comp]\nhost=localhost\ndbname=qgep_comp\nuser=postgres\n" >> ~/.pg_service.conf

  # Create the 3 databases used for pum's check
  - psql -c 'CREATE DATABASE qgep_prod;' -U postgres
  - psql -c 'CREATE DATABASE qgep_test;' -U postgres
  - psql -c 'CREATE DATABASE qgep_comp;' -U postgres

  - psql -c 'CREATE GROUP qgep;' -U postgres
  - psql -c 'CREATE ROLE qgepuser LOGIN;' -U postgres
  - psql -c 'GRANT qgep TO qgepuser;' -U postgres

script:
  - $TRAVIS_BUILD_DIR/scripts/db_setup.sh -r > /dev/null
  - nosetests

  # Get current version
  - export VERSION=$(sed 'r' "$TRAVIS_BUILD_DIR/system/CURRENT_VERSION.txt")

  # Create a db from a dump file. This simulate the prod db
  - pum restore -p qgep_prod -x $TRAVIS_BUILD_DIR/test_data/qgep_dump_20180201.dump
  - pum baseline -p qgep_prod -t qgep_sys.pum_info -d $TRAVIS_BUILD_DIR/delta/ -b 2018.02.01

  # Create last version of qgep db using db_setup.sh script as comp db
  - export PGSERVICE=qgep_comp
  - $TRAVIS_BUILD_DIR/scripts/db_setup.sh > /dev/null
  - pum baseline -p qgep_comp -t qgep_sys.pum_info -d $TRAVIS_BUILD_DIR/delta/ -b $VERSION

  # Run pum's test and upgrade
  - yes | pum test-and-upgrade -pp qgep_prod -pt qgep_test -pc qgep_comp -t qgep_sys.pum_info -d $TRAVIS_BUILD_DIR/delta/ -f /tmp/qwat_dump -i constraints views

after_success:
  - $TRAVIS_BUILD_DIR/scripts/make_pull_request.sh
  - python $TRAVIS_BUILD_DIR/scripts/release_db_template.py
